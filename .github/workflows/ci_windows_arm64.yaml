name: Build for Windows ARM64

on:
  push:

jobs:
  build-windows-arm64:
    name: Build
    runs-on: windows-latest
    env:
      qt_version: "6.7.2"
      miktex_version: "24.4"
      miktex_path: "${{ github.workspace }}/miktex-msvc-arm64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup devcmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            gperf  
            bison
            flex

      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Install build tools
        run: |
          choco install pandoc apache-fop xsltproc jom doxygen.portable 

      # use the preinstalled vcpkg from image
      # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md#package-management
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: C:/vcpkg
          doNotUpdateVcpkg: true  # the preinstalled vcpkg is updated regularly

      - name: Install dependencies from vcpkg
        run: |
          # tell vcpkg to only build Release variants of the dependencies
          New-Item `
            -Path "${{ github.workspace }}" `
            -Name "triplets_overlay" `
            -ItemType Directory
          Copy-Item `
            "${{ env.RUNVCPKG_VCPKG_ROOT }}/triplets/arm64-windows.cmake" `
            "${{ github.workspace }}/triplets_overlay/arm64-windows-release.cmake"
          Add-Content `
            "${{ env.RUNVCPKG_VCPKG_ROOT }}/triplets/x64-windows.cmake" `
            -Value "set(VCPKG_BUILD_TYPE release)"
          Add-Content `
            "${{ github.workspace }}/triplets_overlay/arm64-windows-release.cmake" `
            -Value "set(VCPKG_BUILD_TYPE release)"
          # clear buildtrees after each package installation to reduce disk space requirements
          $packages = `
            "icu:arm64-windows-release",
            "boost-locale:arm64-windows-release",
            "apr:arm64-windows-release",
            "apr-util:arm64-windows-release"
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe upgrade `
            --overlay-triplets="${{ github.workspace }}/triplets_overlay" `
            --no-dry-run
          ${{ env.RUNVCPKG_VCPKG_ROOT }}/vcpkg.exe install `
            --overlay-triplets="${{ github.workspace }}/triplets_overlay" `
            --clean-after-build `
            $packages

      - name: Install Qt (host x64)
        uses: jurplel/install-qt-action@v3
        with:
          version: "${{ env.qt_version }}"
          set-env: 'false'
          dir: 'C:'

      - name: Install Qt (host arm64)
        uses: jurplel/install-qt-action@v3
        with:
          version: "${{ env.qt_version }}"
          modules: 'qtimageformats qt5compat'
          set-env: 'false'
          arch: 'win64_msvc2019_arm64'
          dir: 'C:'

      - name: Install MiKTeX
        run: |
          $env:path += ";C:/Qt/${{ env.qt_version }}/msvc2019_arm64/bin;${{ runner.temp }}/msys64/usr/bin;C:/ProgramData/chocolatey/lib/apache-fop/tools/fop-2.6/fop"
          git clone `
            --branch ${{ env.miktex_version }} `
            --depth 1 `
            https://github.com/MiKTeX/miktex.git
          cd miktex
          cmake `
            -B build `
            -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX="${{ env.miktex_path }}" `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.RUNVCPKG_VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" `
            -DVCPKG_TARGET_TRIPLET=arm64-windows-release `
            -DUSE_SYSTEM_APRUTIL=ON -DUSE_SYSTEM_APR=ON `
            -DQT_HOST_PATH="C:/Qt/${{ env.qt_version }}/msvc2019_64"
          cmake --build build
          cmake --install build 

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MiKTeX_${{ env.miktex_version }}_arm64
          path: ${{ env.miktex_path }}